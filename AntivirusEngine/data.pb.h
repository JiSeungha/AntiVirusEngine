// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_data_2eproto__INCLUDED
#define PROTOBUF_data_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_data_2eproto();
void protobuf_AssignDesc_data_2eproto();
void protobuf_ShutdownFile_data_2eproto();

class Data;
class DataArray;

// ===================================================================

class Data : public ::google::protobuf::Message {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  void Swap(Data* other);

  // implements Message ----------------------------------------------

  Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 MjCode = 2;
  inline bool has_mjcode() const;
  inline void clear_mjcode();
  static const int kMjCodeFieldNumber = 2;
  inline ::google::protobuf::uint64 mjcode() const;
  inline void set_mjcode(::google::protobuf::uint64 value);

  // required bool isWriteAccess = 3;
  inline bool has_iswriteaccess() const;
  inline void clear_iswriteaccess();
  static const int kIsWriteAccessFieldNumber = 3;
  inline bool iswriteaccess() const;
  inline void set_iswriteaccess(bool value);

  // required int32 PreOrPost = 4;
  inline bool has_preorpost() const;
  inline void clear_preorpost();
  static const int kPreOrPostFieldNumber = 4;
  inline ::google::protobuf::int32 preorpost() const;
  inline void set_preorpost(::google::protobuf::int32 value);

  // required string FileName = 5;
  inline bool has_filename() const;
  inline void clear_filename();
  static const int kFileNameFieldNumber = 5;
  inline const ::std::string& filename() const;
  inline void set_filename(const ::std::string& value);
  inline void set_filename(const char* value);
  inline void set_filename(const char* value, size_t size);
  inline ::std::string* mutable_filename();
  inline ::std::string* release_filename();
  inline void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:data.Data)
 private:
  inline void set_has_mjcode();
  inline void clear_has_mjcode();
  inline void set_has_iswriteaccess();
  inline void clear_has_iswriteaccess();
  inline void set_has_preorpost();
  inline void clear_has_preorpost();
  inline void set_has_filename();
  inline void clear_has_filename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 mjcode_;
  bool iswriteaccess_;
  ::google::protobuf::int32 preorpost_;
  ::std::string* filename_;
  friend void  protobuf_AddDesc_data_2eproto();
  friend void protobuf_AssignDesc_data_2eproto();
  friend void protobuf_ShutdownFile_data_2eproto();

  void InitAsDefaultInstance();
  static Data* default_instance_;
};
// -------------------------------------------------------------------

class DataArray : public ::google::protobuf::Message {
 public:
  DataArray();
  virtual ~DataArray();

  DataArray(const DataArray& from);

  inline DataArray& operator=(const DataArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataArray& default_instance();

  void Swap(DataArray* other);

  // implements Message ----------------------------------------------

  DataArray* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataArray& from);
  void MergeFrom(const DataArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 pId = 1;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPIdFieldNumber = 1;
  inline ::google::protobuf::uint64 pid() const;
  inline void set_pid(::google::protobuf::uint64 value);

  // repeated .data.Data DataSet = 2;
  inline int dataset_size() const;
  inline void clear_dataset();
  static const int kDataSetFieldNumber = 2;
  inline const ::data::Data& dataset(int index) const;
  inline ::data::Data* mutable_dataset(int index);
  inline ::data::Data* add_dataset();
  inline const ::google::protobuf::RepeatedPtrField< ::data::Data >&
      dataset() const;
  inline ::google::protobuf::RepeatedPtrField< ::data::Data >*
      mutable_dataset();

  // @@protoc_insertion_point(class_scope:data.DataArray)
 private:
  inline void set_has_pid();
  inline void clear_has_pid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pid_;
  ::google::protobuf::RepeatedPtrField< ::data::Data > dataset_;
  friend void  protobuf_AddDesc_data_2eproto();
  friend void protobuf_AssignDesc_data_2eproto();
  friend void protobuf_ShutdownFile_data_2eproto();

  void InitAsDefaultInstance();
  static DataArray* default_instance_;
};
// ===================================================================


// ===================================================================

// Data

// required uint64 MjCode = 2;
inline bool Data::has_mjcode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_mjcode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_mjcode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_mjcode() {
  mjcode_ = GOOGLE_ULONGLONG(0);
  clear_has_mjcode();
}
inline ::google::protobuf::uint64 Data::mjcode() const {
  // @@protoc_insertion_point(field_get:data.Data.MjCode)
  return mjcode_;
}
inline void Data::set_mjcode(::google::protobuf::uint64 value) {
  set_has_mjcode();
  mjcode_ = value;
  // @@protoc_insertion_point(field_set:data.Data.MjCode)
}

// required bool isWriteAccess = 3;
inline bool Data::has_iswriteaccess() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Data::set_has_iswriteaccess() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Data::clear_has_iswriteaccess() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Data::clear_iswriteaccess() {
  iswriteaccess_ = false;
  clear_has_iswriteaccess();
}
inline bool Data::iswriteaccess() const {
  // @@protoc_insertion_point(field_get:data.Data.isWriteAccess)
  return iswriteaccess_;
}
inline void Data::set_iswriteaccess(bool value) {
  set_has_iswriteaccess();
  iswriteaccess_ = value;
  // @@protoc_insertion_point(field_set:data.Data.isWriteAccess)
}

// required int32 PreOrPost = 4;
inline bool Data::has_preorpost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Data::set_has_preorpost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Data::clear_has_preorpost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Data::clear_preorpost() {
  preorpost_ = 0;
  clear_has_preorpost();
}
inline ::google::protobuf::int32 Data::preorpost() const {
  // @@protoc_insertion_point(field_get:data.Data.PreOrPost)
  return preorpost_;
}
inline void Data::set_preorpost(::google::protobuf::int32 value) {
  set_has_preorpost();
  preorpost_ = value;
  // @@protoc_insertion_point(field_set:data.Data.PreOrPost)
}

// required string FileName = 5;
inline bool Data::has_filename() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Data::set_has_filename() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Data::clear_has_filename() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Data::clear_filename() {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_->clear();
  }
  clear_has_filename();
}
inline const ::std::string& Data::filename() const {
  // @@protoc_insertion_point(field_get:data.Data.FileName)
  return *filename_;
}
inline void Data::set_filename(const ::std::string& value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set:data.Data.FileName)
}
inline void Data::set_filename(const char* value) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(value);
  // @@protoc_insertion_point(field_set_char:data.Data.FileName)
}
inline void Data::set_filename(const char* value, size_t size) {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  filename_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:data.Data.FileName)
}
inline ::std::string* Data::mutable_filename() {
  set_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    filename_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:data.Data.FileName)
  return filename_;
}
inline ::std::string* Data::release_filename() {
  clear_has_filename();
  if (filename_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = filename_;
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Data::set_allocated_filename(::std::string* filename) {
  if (filename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filename_;
  }
  if (filename) {
    set_has_filename();
    filename_ = filename;
  } else {
    clear_has_filename();
    filename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:data.Data.FileName)
}

// -------------------------------------------------------------------

// DataArray

// required uint64 pId = 1;
inline bool DataArray::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataArray::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataArray::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataArray::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 DataArray::pid() const {
  // @@protoc_insertion_point(field_get:data.DataArray.pId)
  return pid_;
}
inline void DataArray::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:data.DataArray.pId)
}

// repeated .data.Data DataSet = 2;
inline int DataArray::dataset_size() const {
  return dataset_.size();
}
inline void DataArray::clear_dataset() {
  dataset_.Clear();
}
inline const ::data::Data& DataArray::dataset(int index) const {
  // @@protoc_insertion_point(field_get:data.DataArray.DataSet)
  return dataset_.Get(index);
}
inline ::data::Data* DataArray::mutable_dataset(int index) {
  // @@protoc_insertion_point(field_mutable:data.DataArray.DataSet)
  return dataset_.Mutable(index);
}
inline ::data::Data* DataArray::add_dataset() {
  // @@protoc_insertion_point(field_add:data.DataArray.DataSet)
  return dataset_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::data::Data >&
DataArray::dataset() const {
  // @@protoc_insertion_point(field_list:data.DataArray.DataSet)
  return dataset_;
}
inline ::google::protobuf::RepeatedPtrField< ::data::Data >*
DataArray::mutable_dataset() {
  // @@protoc_insertion_point(field_mutable_list:data.DataArray.DataSet)
  return &dataset_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_data_2eproto__INCLUDED
